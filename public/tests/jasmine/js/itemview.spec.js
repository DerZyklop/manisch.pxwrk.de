// Generated by CoffeeScript 1.6.3
(function() {
  describe('class ItemView', function() {
    var itemView;
    itemView = '';
    describe('when view is initialized without model', function() {
      return it('should throw exception', function() {
        return expect(function() {
          return new ItemView();
        }).toThrow();
      });
    });
    describe('when model.constructor.name is not a "Item"', function() {
      return it('should throw exception', function() {
        return expect(function() {
          return new ItemView({
            model: '3'
          });
        }).toThrow();
      });
    });
    beforeEach(function() {
      return itemView = new ItemView({
        model: new Item({
          manisch: 'Moss',
          german: 'Mädchen',
          id: '4'
        })
      });
    });
    it('should be defined', function() {
      return expect(itemView).toBeDefined();
    });
    describe('render()', function() {
      beforeEach(function() {
        itemView = new ItemView({
          model: new Item({
            manisch: 'Moss',
            german: 'Mädchen'
          })
        });
        return itemView.render();
      });
      return it('should contain the translations', function() {
        expect(itemView.$el.html()).toMatch(itemView.model.get('manisch'));
        return expect(itemView.$el.html()).toMatch(itemView.model.get('german'));
      });
    });
    describe('renderItemDetailView()', function() {
      return it('should contain the translations', function() {
        var detailItem, html;
        detailItem = itemView.renderItemDetailView();
        html = detailItem.$el.html();
        expect(html).toMatch(itemView.model.get('manisch'));
        return expect(html).toMatch(itemView.model.get('german'));
      });
    });
    return describe('unrender()', function() {
      return pxwrk.functionLog('unrender()');
    });
  });

}).call(this);
